[{"C:\\Users\\kikam\\Projects\\todo-app\\src\\index.js":"1","C:\\Users\\kikam\\Projects\\todo-app\\src\\App.js":"2","C:\\Users\\kikam\\Projects\\todo-app\\src\\reportWebVitals.js":"3","C:\\Users\\kikam\\Projects\\todo-app\\src\\components\\todo.js":"4","C:\\Users\\kikam\\Projects\\todo-app\\src\\components\\Todo.js":"5","C:\\Users\\kikam\\Projects\\todo-app\\src\\components\\Form.js":"6","C:\\Users\\kikam\\Projects\\todo-app\\src\\components\\FilterButton.js":"7","C:\\Users\\kikam\\Projects\\Todo-App\\src\\index.js":"8","C:\\Users\\kikam\\Projects\\Todo-App\\src\\App.js":"9","C:\\Users\\kikam\\Projects\\Todo-App\\src\\components\\Todo.js":"10","C:\\Users\\kikam\\Projects\\Todo-App\\src\\components\\Form.js":"11","C:\\Users\\kikam\\Projects\\Todo-App\\src\\components\\FilterButton.js":"12"},{"size":357,"mtime":1624553984311,"results":"13","hashOfConfig":"14"},{"size":2508,"mtime":1624632419828,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":1983,"mtime":1624560492171,"results":"17","hashOfConfig":"14"},{"size":1983,"mtime":1624560492171,"results":"18","hashOfConfig":"14"},{"size":821,"mtime":1624553832087,"results":"19","hashOfConfig":"14"},{"size":306,"mtime":1624631008145,"results":"20","hashOfConfig":"14"},{"size":357,"mtime":1624553984311,"results":"21","hashOfConfig":"22"},{"size":2508,"mtime":1624632419828,"results":"23","hashOfConfig":"22"},{"size":1983,"mtime":1624560492171,"results":"24","hashOfConfig":"22"},{"size":821,"mtime":1624553832087,"results":"25","hashOfConfig":"22"},{"size":306,"mtime":1624631008145,"results":"26","hashOfConfig":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ve6j5l",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hn1xpn",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kikam\\Projects\\todo-app\\src\\index.js",[],"C:\\Users\\kikam\\Projects\\todo-app\\src\\App.js",["53"],"import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Todo from \"./components/Todo.js\"\nimport Form from \"./components/Form.js\";\nimport FilterButton from \"./components/FilterButton.js\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\n\nfunction App(props) {\n  \n  \n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n  const FILTER_NAMES = Object.keys(FILTER_MAP);\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  const taskList = tasks.filter(FILTER_MAP[filter]).map(task => (\n    <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        editTask={editTask}\n        deleteTask={deleteTask}\n      />\n    )\n  );\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  \n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const status = filter === 'Completed' ? 'completed' : filter === 'Active' ? 'active' : '';\n  const headingText = `${taskList.length} ${tasksNoun} ${status}`;\n\n  return (\n    <div className=\"todo-app\">\n      <Form addTask={addTask}/>\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\">\n       {headingText}\n      </h2>\n      <ul role=\"list\" className=\"todo-list\">\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\kikam\\Projects\\todo-app\\src\\reportWebVitals.js",[],["54","55"],"C:\\Users\\kikam\\Projects\\todo-app\\src\\components\\todo.js",[],"C:\\Users\\kikam\\Projects\\todo-app\\src\\components\\Todo.js",[],"C:\\Users\\kikam\\Projects\\todo-app\\src\\components\\Form.js",[],"C:\\Users\\kikam\\Projects\\todo-app\\src\\components\\FilterButton.js",[],"C:\\Users\\kikam\\Projects\\Todo-App\\src\\index.js",[],"C:\\Users\\kikam\\Projects\\Todo-App\\src\\App.js",["56"],"C:\\Users\\kikam\\Projects\\Todo-App\\src\\components\\Todo.js",[],"C:\\Users\\kikam\\Projects\\Todo-App\\src\\components\\Form.js",[],"C:\\Users\\kikam\\Projects\\Todo-App\\src\\components\\FilterButton.js",[],{"ruleId":"57","severity":1,"message":"58","line":91,"column":7,"nodeType":"59","endLine":91,"endColumn":45},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"57","severity":1,"message":"58","line":91,"column":7,"nodeType":"59","endLine":91,"endColumn":45},"jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-global-assign","no-unsafe-negation"]