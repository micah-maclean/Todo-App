{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kikam\\\\Projects\\\\todo-app\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(props) {\n  _s();\n\n  const [isEditing, setEditing] = useState(false);\n\n  const editingTemplate = /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        className: \"todo-edit\",\n        type: \"text\",\n        placeholder: \"edit\" + props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn cancel\",\n        onClick: () => setEditing(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn__primary save\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n\n  const viewTemplate = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        defaultChecked: props.completed,\n        onChange: () => props.toggleTaskCompleted(props.id),\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: props.id,\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => setEditing(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn delete\",\n        onClick: () => props.deleteTask(props.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo\",\n    children: isEditing ? editingTemplate : viewTemplate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"tuiZ/XkP3IIihHgOqim00M9Cb2U=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/kikam/Projects/todo-app/src/components/Todo.js"],"names":["React","useState","Todo","props","isEditing","setEditing","editingTemplate","id","name","viewTemplate","completed","toggleTaskCompleted","deleteTask"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMK,eAAe,gBACjB;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAO,QAAA,EAAE,EAAEH,KAAK,CAACI,EAAjB;AAAqB,QAAA,SAAS,EAAC,WAA/B;AAA2C,QAAA,IAAI,EAAC,MAAhD;AAAuD,QAAA,WAAW,EAAE,SAASJ,KAAK,CAACK;AAAnF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAA6C,QAAA,OAAO,EAAE,MAAMH,UAAU,CAAC,KAAD,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,uBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAgBA,QAAMI,YAAY,gBACd;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAO,QAAA,EAAE,EAAEN,KAAK,CAACI,EAAjB;AAAqB,QAAA,cAAc,EAAEJ,KAAK,CAACO,SAA3C;AAAuD,QAAA,QAAQ,EAAE,MAAMP,KAAK,CAACQ,mBAAN,CAA0BR,KAAK,CAACI,EAAhC,CAAvE;AAA4G,QAAA,IAAI,EAAC;AAAjH;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,OAAO,EAAEJ,KAAK,CAACI,EAA7C;AAAA,kBACKJ,KAAK,CAACK;AADX;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAwB,QAAA,OAAO,EAAE,MAAMH,UAAU,CAAC,IAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAE,MAAMF,KAAK,CAACS,UAAN,CAAiBT,KAAK,CAACI,EAAvB,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAmBA,sBACI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA,cAAsBH,SAAS,GAAGE,eAAH,GAAqBG;AAApD;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAzCQP,I;;KAAAA,I;AA2CT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Todo(props) {\r\n    const [isEditing, setEditing] = useState(false);\r\n\r\n    const editingTemplate = (\r\n        <form className=\"stack-small\">\r\n            <div className=\"form-group\">\r\n                <input id={props.id} className=\"todo-edit\" type=\"text\" placeholder={\"edit\" + props.name}/>\r\n            </div>\r\n            <div className=\"btn-group\">\r\n                <button type=\"button\" className=\"btn cancel\" onClick={() => setEditing(false)}>\r\n                    Cancel\r\n                </button>\r\n                <button type=\"submit\" className=\"btn btn__primary save\">\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n    const viewTemplate = (\r\n        <div className=\"stack-small\">\r\n            <div className=\"checkbox\">\r\n                <input id={props.id} defaultChecked={props.completed}  onChange={() => props.toggleTaskCompleted(props.id)} type=\"checkbox\"/>\r\n                <label className=\"todo-label\" htmlFor={props.id}>\r\n                    {props.name}\r\n                </label>\r\n            </div>\r\n            <div className=\"btn-group\">\r\n                <button className=\"btn\" onClick={() => setEditing(true)}>\r\n                    Edit\r\n                </button>\r\n                <button className=\"btn delete\" onClick={() => props.deleteTask(props.id)}>\r\n                    Delete\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return(\r\n        <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>\r\n    )\r\n}\r\n\r\nexport default Todo;"]},"metadata":{},"sourceType":"module"}