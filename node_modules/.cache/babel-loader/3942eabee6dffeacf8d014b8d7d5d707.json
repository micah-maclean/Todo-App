{"ast":null,"code":"import _objectSpread from\"C:/Users/kikam/Projects/Todo-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:/Users/kikam/Projects/Todo-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/kikam/Projects/Todo-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{nanoid}from\"nanoid\";import Todo from\"./components/Todo.js\";import Form from\"./components/Form.js\";import FilterButton from\"./components/FilterButton.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FILTER_MAP={All:function All(){return true;},Active:function Active(task){return!task.completed;},Completed:function Completed(task){return task.completed;}};function App(props){var _useState=useState(props.tasks),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var _useState3=useState('All'),_useState4=_slicedToArray(_useState3,2),filter=_useState4[0],setFilter=_useState4[1];var FILTER_NAMES=Object.keys(FILTER_MAP);function addTask(name){var newTask={id:\"todo-\"+nanoid(),name:name,completed:false};setTasks([].concat(_toConsumableArray(tasks),[newTask]));}function toggleTaskCompleted(id){var updatedTasks=tasks.map(function(task){// if this task has the same ID as the edited task\nif(id===task.id){// use object spread to make a new object\n// whose `completed` prop has been inverted\nreturn _objectSpread(_objectSpread({},task),{},{completed:!task.completed});}return task;});setTasks(updatedTasks);}function editTask(id,newName){var editedTaskList=tasks.map(function(task){// if this task has the same ID as the edited task\nif(id===task.id){//\nreturn _objectSpread(_objectSpread({},task),{},{name:newName});}return task;});setTasks(editedTaskList);}function deleteTask(id){var remainingTasks=tasks.filter(function(task){return id!==task.id;});setTasks(remainingTasks);}var taskList=tasks.filter(FILTER_MAP[filter]).map(function(task){return/*#__PURE__*/_jsx(Todo,{id:task.id,name:task.name,completed:task.completed,toggleTaskCompleted:toggleTaskCompleted,editTask:editTask,deleteTask:deleteTask},task.id);});var filterList=FILTER_NAMES.map(function(name){return/*#__PURE__*/_jsx(FilterButton,{name:name,isPressed:name===filter,setFilter:setFilter},name);});var tasksNoun=taskList.length!==1?'tasks':'task';var status=filter==='Completed'?'completed':filter==='Active'?'active':'';var headingText=\"\".concat(taskList.length,\" \").concat(tasksNoun,\" \").concat(status);return/*#__PURE__*/_jsxs(\"div\",{className:\"todo-app\",children:[/*#__PURE__*/_jsx(Form,{addTask:addTask}),/*#__PURE__*/_jsx(\"div\",{className:\"filters btn-group stack-exception\",children:filterList}),/*#__PURE__*/_jsx(\"h2\",{id:\"list-heading\",children:headingText}),/*#__PURE__*/_jsx(\"ul\",{role:\"list\",className:\"todo-list\",children:taskList})]});}export default App;","map":{"version":3,"sources":["C:/Users/kikam/Projects/Todo-App/src/App.js"],"names":["React","useState","nanoid","Todo","Form","FilterButton","FILTER_MAP","All","Active","task","completed","Completed","App","props","tasks","setTasks","filter","setFilter","FILTER_NAMES","Object","keys","addTask","name","newTask","id","toggleTaskCompleted","updatedTasks","map","editTask","newName","editedTaskList","deleteTask","remainingTasks","taskList","filterList","tasksNoun","length","status","headingText"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Todo from \"./components/Todo.js\"\nimport Form from \"./components/Form.js\";\nimport FilterButton from \"./components/FilterButton.js\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\n\nfunction App(props) {\n  \n  \n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n  const FILTER_NAMES = Object.keys(FILTER_MAP);\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  const taskList = tasks.filter(FILTER_MAP[filter]).map(task => (\n    <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        editTask={editTask}\n        deleteTask={deleteTask}\n      />\n    )\n  );\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  \n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const status = filter === 'Completed' ? 'completed' : filter === 'Active' ? 'active' : '';\n  const headingText = `${taskList.length} ${tasksNoun} ${status}`;\n\n  return (\n    <div className=\"todo-app\">\n      <Form addTask={addTask}/>\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\">\n       {headingText}\n      </h2>\n      <ul role=\"list\" className=\"todo-list\">\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}