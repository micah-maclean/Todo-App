{"version":3,"sources":["components/Todo.js","components/Form.js","components/FilterButton.js","App.js","index.js"],"names":["Todo","props","useState","isEditing","setEditing","newName","setNewName","editingTemplate","className","onSubmit","e","preventDefault","editTask","id","value","onChange","target","placeholder","name","type","onClick","viewTemplate","defaultChecked","completed","toggleTaskCompleted","htmlFor","deleteTask","Form","setName","addTask","autoComplete","FilterButton","aria-pressed","isPressed","setFilter","FILTER_MAP","All","Active","task","Completed","App","tasks","setTasks","filter","FILTER_NAMES","Object","keys","updatedTasks","map","editedTaskList","remainingTasks","taskList","filterList","tasksNoun","length","status","headingText","newTask","nanoid","role","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0757235.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Todo(props) {\r\n    const [isEditing, setEditing] = useState(false);\r\n\r\n    const [newName, setNewName] = useState('');\r\n\r\n    function handleChange(e) {\r\n        setNewName(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.editTask(props.id, newName);\r\n        setNewName(\"\");\r\n        setEditing(false);\r\n    }\r\n\r\n    const editingTemplate = (\r\n        <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <input id={props.id} className=\"todo-edit\" value={newName} onChange={handleChange} placeholder={\"Edit ''\" + props.name +\"''\"} type=\"text\"/>\r\n            </div>\r\n            <div className=\"btn-group\">\r\n                <button type=\"button\" className=\"btn cancel\" onClick={() => setEditing(false)}>\r\n                    Cancel\r\n                </button>\r\n                <button type=\"submit\" className=\"btn btn__primary save\">\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n    const viewTemplate = (\r\n        <div className=\"stack-small\">\r\n            <div className=\"checkbox\">\r\n                <input id={props.id} defaultChecked={props.completed}  onChange={() => props.toggleTaskCompleted(props.id)} type=\"checkbox\"/>\r\n                <label className=\"todo-label\" htmlFor={props.id}>\r\n                    {props.name}\r\n                </label>\r\n            </div>\r\n            <div className=\"btn-group\">\r\n                <button className=\"btn\" onClick={() => setEditing(true)}>\r\n                    Edit\r\n                </button>\r\n                <button className=\"btn delete\" onClick={() => props.deleteTask(props.id)}>\r\n                    Delete\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return(\r\n        <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React, { useState } from \"react\";\r\n\r\nfunction Form(props) {\r\n    const [name, setName] = useState('');\r\n\r\n    function handleChange(e) {\r\n        setName(e.target.value);\r\n    }\r\n    \r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.addTask(name);\r\n        setName(\"\");\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <h2 className=\"label-wrapper\">\r\n                <label htmlFor=\"new-task\" >What needs to be done?</label>\r\n            </h2>\r\n            <input value={name} onChange={handleChange} placeholder=\"new task\" type=\"text\" id=\"new-task\" className=\"input_lg\" name=\"new-task\" autoComplete=\"off\"/>\r\n            <button type=\"submit\" className=\"btn btn_lg add\">\r\n            Add\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nfunction FilterButton(props) {\r\n    return(\r\n        <button className=\"btn toggle-btn\" aria-pressed={props.isPressed} onClick={() => props.setFilter(props.name)} type=\"button\">\r\n          <span>{props.name}</span>\r\n        </button> \r\n    )\r\n}\r\n\r\nexport default FilterButton;","import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Todo from \"./components/Todo.js\"\nimport Form from \"./components/Form.js\";\nimport FilterButton from \"./components/FilterButton.js\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\n\nfunction App(props) {\n  \n  \n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n  const FILTER_NAMES = Object.keys(FILTER_MAP);\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  const taskList = tasks.filter(FILTER_MAP[filter]).map(task => (\n    <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        editTask={editTask}\n        deleteTask={deleteTask}\n      />\n    )\n  );\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  \n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const status = filter === 'Completed' ? 'completed' : filter === 'Active' ? 'active' : '';\n  const headingText = `${taskList.length} ${tasksNoun} ${status}`;\n\n  return (\n    <div className=\"todo-app\">\n      <Form addTask={addTask}/>\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\">\n       {headingText}\n      </h2>\n      <ul role=\"list\" className=\"todo-list\">\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst tasks= [\n  { id: \"todo-0\", name: \"Eat\", completed: true },\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\n  { id: \"todo-2\", name: \"Repeat\", completed: false }\n];\n\nReactDOM.render( <App tasks={tasks}/>, document.getElementById('root'));\n"],"sourceRoot":""}